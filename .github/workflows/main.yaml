name: Test and Build
on:
  push:
    branches:
      - master
      - dev
      - 'feature/**'
    paths-ignore:
      - '**.md'
jobs:
  test_and_build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')" # Skip CI if [skip ci] is passed in the commit.

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v2

      - name: üü¢ Create Conda environment using Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          activate-environment: zt2md
          environment-file: dev-env.yaml
          auto-activate-base: false
          use-mamba: true

      - name: üêç Setup Poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: /usr/share/miniconda3/envs/zt2md
          key: linux-64-conda-${{ hashFiles('dev-env.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: ‚öô Install PyPi packages via Poetry
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: üïµÔ∏è Run pytest
        shell: bash -l {0}
        run: pytest --cov-report xml:coverage.xml

      - name: üì§Ô∏è Build and publish to pypi
        uses: JRubics/poetry-publish@v1.9
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          repository_name: "testpypi" # no need when properly set up to publish on PyPI
          repository_url: "https://test.pypi.org/legacy/" # no need when properly set up to publish on PyPI
        if: steps.extract_branch.outputs.branch == 'master'